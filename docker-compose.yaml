version: "3"

networks:
  app_proxy:
    name: ${COMPOSE_NET}
  

volumes:
  app_data:
    name: ${COMPOSE_VOLUME}

services:    
  marketplace-app:
    build:
      context: ./app/.
      dockerfile: Dockerfile.${SOL_NET}
      args:
        #NODE_ENV: ${NODE_ENV}
        NODE_VERSION: ${NODE_VERSION}
        NEXT_BASE_PATH: ${NEXT_BASE_PATH}
        NEXT_PUBLIC_SOLANA_NETWORK: ${NEXT_PUBLIC_SOLANA_NETWORK}
        NEXT_PUBLIC_SOLANA_RPC_HOST: ${NEXT_PUBLIC_SOLANA_RPC_HOST}
        NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: ${NEXT_PUBLIC_GOOGLE_ANALYTICS_ID}
        NEXT_PUBLIC_STORE_ADDRESS: ${NEXT_PUBLIC_STORE_ADDRESS}
        NEXT_ENABLE_NFT_PACKS: ${NEXT_ENABLE_NFT_PACKS}
        NEXT_SPL_TOKEN_MINTS: ${NEXT_SPL_TOKEN_MINTS}
        NEXT_CG_SPL_TOKEN_IDS: ${NEXT_CG_SPL_TOKEN_IDS}

    container_name: ${COMPOSE_HOSTNAME}
    user: "node:node"
    restart: unless-stopped
    networks:
      - app_proxy
    ports:
      - "${COMPOSE_PORT}:${NEXT_PORT}"
    volumes:
      - "app_data:/app:rw"
    command: ${COMPOSE_COMMAND}
    working_dir: /app
    env_file:
      - ${ENV_FILE}

  mongodatabase:
   image: mongo:5.0.2
   restart: unless-stopped
   # environment:
   #   - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
   #   - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
   ports:
     - 27018:27017
   volumes:
     - db:/data/db