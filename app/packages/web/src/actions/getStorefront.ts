import {
  ArweaveTransaction,
  Storefront,
  ArweaveQueryResponse,
} from '@oyster/common';
import { maybeCDN } from '../utils/cdn';
import getConfig from 'next/config';

const nextConfig = getConfig();
const publicRuntimeConfig = nextConfig.publicRuntimeConfig;

const ARWEAVE_URL = publicRuntimeConfig.publicArweaveUrl;

export const getStorefront = async (
  subdomain: string,
): Promise<Storefront | null> => {
  try {
    const response = await fetch(`${ARWEAVE_URL}/graphql`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        query: `
            query GetStorefrontTheme($subdomain: String!) {
              transactions(tags:[{ name: "holaplex:metadata:subdomain", values: [$subdomain]}], first: 1) {
                edges {
                  node {
                    id
                    tags {
                      name
                      value
                    }
                  }
                }
              }
            }
          `,
        variables: {
          subdomain,
        },
      }),
    });

    const {
      data: {
        transactions: {
          edges: [{ node }],
        },
      },
    } = (await response.json()) as ArweaveQueryResponse;
    const transaction = node as ArweaveTransaction;

    const values = transaction.tags.reduce((acc: any, tag) => {
      acc[tag.name] = tag.value || null;

      return acc;
    }, {});

    return {
      subdomain,
      pubkey: values['solana:pubkey'],
      theme: {
        logo: maybeCDN(values['holaplex:theme:logo:url']),
        banner: maybeCDN(values['holaplex:theme:banner:url'] || ''),
        stylesheet: maybeCDN(`${ARWEAVE_URL}/${transaction.id}`),
        color: {
          background: values['holaplex:theme:color:background'],
          primary: values['holaplex:theme:color:primary'],
        },
        font: {
          title: values['holaplex:theme:font:title'],
          text: values['holaplex:theme:font:text'],
        },
      },
      meta: {
        favicon: maybeCDN(
          values['holaplex:metadata:favicon:url'] || '/favicon-16x16.png',
        ),
        title:
          values['holaplex:metadata:page:title'] ||
          `Holaplex - ${subdomain} | NFT Marketplace`,
        description:
          values['holaplex:metadata:page:description'] ||
          'A NFT marketplace generated by Holaplex',
      },
    };
  } catch (err) {
    console.error(err);
    return null;
  }
};
